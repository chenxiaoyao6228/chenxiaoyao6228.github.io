(window.webpackJsonp=window.webpackJsonp||[]).push([[281],{839:function(e,t,r){"use strict";r.r(t);var o=r(7),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"refresh-token"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#refresh-token"}},[e._v("#")]),e._v(" Refresh token")]),e._v(" "),r("p",[e._v("refresh token 是专用于刷新 access token 的 token。 如果没有 refresh token，也可以刷新 access token，但每次刷新都要用户输入登录用户名与密码，会很麻烦。有了 refresh token，可以减少这个麻烦，客户端直接用 refresh token 去更新 access token，无需用户进行额外的操作")]),e._v(" "),r("h2",{attrs:{id:"jwt-的工作原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jwt-的工作原理"}},[e._v("#")]),e._v(" JWT 的工作原理")]),e._v(" "),r("p",[e._v("客户端收到服务器返回的 JWT，可以储存在 Cookie 里面，也可以储存在 localStorage。")]),e._v(" "),r("p",[e._v("此后，客户端每次与服务器通信，都要带上这个 JWT。你可以把它放在 Cookie 里面自动发送，但是这样不能跨域，所以更好的做法是放在 HTTP 请求的头信息Authorization字段里面。")]),e._v(" "),r("blockquote",[r("p",[e._v("Authorization: Bearer "),r("token")],1)]),e._v(" "),r("p",[e._v("另一种做法是，跨域的时候，JWT 就放在 POST 请求的数据体里面。")]),e._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://docs.authing.cn/",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);