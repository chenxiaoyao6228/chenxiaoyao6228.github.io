(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{629:function(s,t,a){"use strict";a.r(t);var e=a(7),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("p",[s._v("印象中正则表达式总是难学难记,学了忘,忘了又学, 这次痛定思痛, 决定这么操作:")]),s._v(" "),a("ol",[a("li",[s._v("写一篇文章总结 Javascript 中正则的基本概念, 不涉及太多的细枝末节, 方便回顾")]),s._v(" "),a("li",[s._v("准备一个练习库(常用的正则表达式), 提供基本的对照, 方便后续短时间内强化,毕竟熟能生巧")])]),s._v(" "),a("p",[s._v("希望文章能对大家有帮助.")]),s._v(" "),a("h3",{attrs:{id:"工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具"}},[s._v("#")]),s._v(" 工具")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://regex101.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("正则解析：regex101"),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:"https://regexper.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("正则可视化：regexper"),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Cheatsheet",target:"_blank",rel:"noopener noreferrer"}},[s._v("正则速查符号速查"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"构建与使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建与使用"}},[s._v("#")]),s._v(" 构建与使用")]),s._v(" "),a("h3",{attrs:{id:"字面量还是构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字面量还是构造函数"}},[s._v("#")]),s._v(" 字面量还是构造函数")]),s._v(" "),a("p",[s._v("一句话: "),a("strong",[s._v("当正则表达式在开发环境是明确的,推荐优先使用字面量语法;当需要在运行时动态创建字符串来构建正则表达式时,则使用构造函数的方式。")])]),s._v(" "),a("p",[s._v("比如要判断一个元素的 className 中是否包含名为 active 的类")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isActive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("ele")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("active")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("elem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("className"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("如果要抽象为一个判断某个元素是否含有某个类")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("className"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ele")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'(^|\\\\s)'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" className "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'(\\\\s|$)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" className在构建的时候才知道\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("elem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("className"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"字符串和正则表达式的常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串和正则表达式的常用方法"}},[s._v("#")]),s._v(" 字符串和正则表达式的常用方法")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("regex.match")])]),s._v(" "),a("li",[a("p",[s._v("str.replace")])])]),s._v(" "),a("p",[s._v("更多用法请看:")]),s._v(" "),a("ul",[a("li",[s._v("正则表达式: test, match, matchAll, exec")]),s._v(" "),a("li",[s._v("字符串: replace, split, search")])]),s._v(" "),a("p",[s._v("其中, 最常用的是 regex.test, regex.match")]),s._v(" "),a("h2",{attrs:{id:"匹配字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配字符"}},[s._v("#")]),s._v(" 匹配字符")]),s._v(" "),a("p",[s._v("匹配字符: 有横向匹配, 范围, 用**"),a("code",[s._v("[]")]),s._v("**,纵向匹配, 数量, 用"),a("code",[s._v("**{}**")]),s._v(", "),a("strong",[s._v("可以想象成一个固定长度的密码锁")])]),s._v(" "),a("p",[s._v("横向匹配: 正反以及缩略形式")]),s._v(" "),a("p",[s._v("正向使用"),a("code",[s._v("[要匹配的内容]")]),s._v(",反向形式为使用"),a("code",[s._v("[^不要匹配的内容]")])]),s._v(" "),a("ul",[a("li",[s._v("[abc], [^abc], 非 abc 其中的一个")]),s._v(" "),a("li",[s._v("[a-zA-Z0-9]")])]),s._v(" "),a("p",[s._v("纵向匹配 v")]),s._v(" "),a("ul",[a("li",[s._v("?, *, +, {}")])]),s._v(" "),a("h2",{attrs:{id:"匹配位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配位置"}},[s._v("#")]),s._v(" 匹配位置")]),s._v(" "),a("p",[s._v("ps: 位置相当于空字符")]),s._v(" "),a("p",[s._v("1.开头和结尾")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("test$"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("2.边界")]),s._v(" "),a("ul",[a("li",[s._v("单词边界与非单词边界: ^, $, \\w, \\W")])]),s._v(" "),a("h2",{attrs:{id:"前瞻与后顾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前瞻与后顾"}},[s._v("#")]),s._v(" 前瞻与后顾")]),s._v(" "),a("p",[s._v("提供了前后相关的条件,但是"),a("strong",[s._v("匹配结果不包含条件中的内容")])]),s._v(" "),a("h3",{attrs:{id:"x-y"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x-y"}},[s._v("#")]),s._v(" x(?=y)")]),s._v(" "),a("p",[s._v("含义: 找到 x, 看看后面是不是 y, 是的话返回 x(无 y)，(当然也可以按照先查找 Y, 然后看前面是不是 X 来理解）")]),s._v(" "),a("h4",{attrs:{id:"基本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本"}},[s._v("#")]),s._v(" 基本")]),s._v(" "),a("p",[s._v("例子:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"肾6 售价为 5000RMB"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\d+(?=RMB)")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5000")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("code",[s._v("/\\d+(?=RMB)/")]),s._v("匹配的是"),a("strong",[s._v("任意多个数字,后面紧跟 RMB")]),s._v(", 5000 满足条件, "),a("code",[s._v("RMB")]),s._v("是条件内容,因此不返回. 6 后面没有跟"),a("code",[s._v("RMB")]),s._v(", 没有符合条件")]),s._v(" "),a("h4",{attrs:{id:"稍微复杂的例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#稍微复杂的例子"}},[s._v("#")]),s._v(" 稍微复杂的例子")]),s._v(" "),a("p",[s._v("另一个更加复杂的例子: "),a("strong",[s._v("X(?=Y)(?=Z)")])]),s._v(" "),a("p",[s._v("匹配模式是这样的：")]),s._v(" "),a("ol",[a("li",[s._v("找到 X")]),s._v(" "),a("li",[s._v("检测 X 后面是不是 Y，如果不是就跳过")]),s._v(" "),a("li",[s._v("检测 X 后面是不是 Z， 如果不是就跳过")])]),s._v(" "),a("p",[s._v("也就是说 X 后面要同时跟上模式 Y 和模式 Z， 这怎么可能？唯一的可能是模式 Y 和 Z 并不是"),a("strong",[s._v("互斥的")])]),s._v(" "),a("p",[s._v("比如 \\d+(?=\\s)(?=.*5000), 匹配的是"),a("strong",[s._v("一个或多个数字，后面紧跟着一个空格，然后在字符后面的某处有个 5000 的数字")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"肾6 售价为 5000RMB"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\d+(?=\\s)(?=.*5000)")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 6")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("有比如，我们希望写一个简单的检查密码的正则， 密码格式为： 6-12 位，至少一个为数字，其余为字母")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("(?=\\w{6,12})(?=\\D*\\d)")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xiaoyao666"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xiaoyao"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"x-y-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x-y-2"}},[s._v("#")]),s._v(" x(?!y)")]),s._v(" "),a("p",[s._v("与上面类似，就返回后面不是 Y 的 X")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let str = '肾6 售价为 5000RMB'\nconsole.log(str.match(/\\d+(?!RMB)/)[0]) // 6\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"y-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#y-x"}},[s._v("#")]),s._v(" (?<=y)x")]),s._v(" "),a("p",[s._v("找到 X，看前面是不是 Y，还是上面的例子")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"肾6 售价为 $5000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 换成$")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("(?<=\\$)\\d+")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5000")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"y-x-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#y-x-2"}},[s._v("#")]),s._v(" (?<!y)x")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"肾6 售价为 $5000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("(?<!\\$)\\d+")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 6")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"括号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#括号"}},[s._v("#")]),s._v(" 括号")]),s._v(" "),a("p",[s._v("分组与捕获")]),s._v(" "),a("p",[s._v("由于捕获与分组都使用圆括号表示,对于正则表达式处理器来说, 无法区分所添加的是捕获还是分组")]),s._v(" "),a("p",[s._v("括号的功能: 分组分支, 捕获以及引用")]),s._v(" "),a("h3",{attrs:{id:"分支-或"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支-或"}},[s._v("#")]),s._v(" 分支(或)")]),s._v(" "),a("p",[s._v("分支是指使用 "),a("code",[s._v("|")]),s._v(" 字符将多个正则表达式连接起来形成一个选择。当正则表达式匹配时，它会优先选择其中的第一个分支，如果第一个分支不能匹配，则会继续尝试下一个分支，直到全部分支都尝试完成。")]),s._v(" "),a("p",[s._v("例如，正则表达式 "),a("code",[s._v("(cat|dog|fish)")]),s._v(" 匹配包含 "),a("code",[s._v("cat")]),s._v("、"),a("code",[s._v("dog")]),s._v(" 或 "),a("code",[s._v("fish")]),s._v(" 的字符串。它将先尝试匹配 "),a("code",[s._v("cat")]),s._v("，如果不能匹配，则继续尝试 "),a("code",[s._v("dog")]),s._v(" 和 "),a("code",[s._v("fish")]),s._v("。")]),s._v(" "),a("p",[s._v("分支在正则表达式中非常有用，因为它允许我们对多个不同的模式进行选择，提高了匹配的精确性和匹配范围。")]),s._v(" "),a("h3",{attrs:{id:"分组捕获"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组捕获"}},[s._v("#")]),s._v(" 分组捕获")]),s._v(" "),a("h4",{attrs:{id:"分组引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组引用"}},[s._v("#")]),s._v(" 分组引用")]),s._v(" "),a("p",[s._v("在 Javascript 中已用, 使用**$**符")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Xiao Yao"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("(\\w+)\\s(\\w+)")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2 $1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Yao Xiao")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"反向引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反向引用"}},[s._v("#")]),s._v(" 反向引用")]),s._v(" "),a("p",[s._v("在正则表达式中使用，使用 \\符")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" repeatStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regex regex"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" repeatRegex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("(\\w+)\\s\\1")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nrepeatRegex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("repeatStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"非捕获"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非捕获"}},[s._v("#")]),s._v(" 非捕获")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[s._v("#")]),s._v(" 修饰符")]),s._v(" "),a("p",[s._v("Javascript 正则表达式中，一般使用以下五种修饰符：")]),s._v(" "),a("ol",[a("li",[a("p",[a("code",[s._v("g")]),s._v("：全局匹配模式，表示匹配所有符合条件的文本，而不是只匹配第一个。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("i")]),s._v("：忽略大小写匹配模式，表示匹配时不区分大小写。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("m")]),s._v("：多行匹配模式，表示字符“^”和字符“$”在匹配时会匹配文本中的每一行，而不是只匹配整个文本的开头和结尾。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("u")]),s._v("：Unicode 匹配模式，用于支持 Unicode 字符集。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("y")]),s._v("：粘附匹配模式，表示从上次匹配的位置开始匹配，而不是从整个文本的开头开始。")])])]),s._v(" "),a("p",[s._v("在 Javascript 正则表达式中，修饰符是以字符串的形式放在表达式的末尾，如"),a("code",[s._v("/pattern/g")]),s._v("和"),a("code",[s._v("/pattern/i")]),s._v("。可以组合使用这些修饰符，例如"),a("code",[s._v("/pattern/gi")]),s._v("表示全局匹配、忽略大小写的模式。")]),s._v(" "),a("p",[s._v("当使用修饰符时，可以使用"),a("code",[s._v("flags")]),s._v("属性（或"),a("code",[s._v("options")]),s._v("属性）来获取这些修饰符，例如：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("pattern")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("gi")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 输出 "gi"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("需要注意的是，在 Javascript 中，只有"),a("code",[s._v("g")]),s._v("和"),a("code",[s._v("i")]),s._v("修饰符是普遍支持的。其他修饰符需要在支持它们的 Javascript 引擎上才能正常运行。")]),s._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://deerchao.cn/tutorials/regex/regex.htm",target:"_blank",rel:"noopener noreferrer"}},[s._v("阮一峰-正则表达式 30 分钟入门教程"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions",target:"_blank",rel:"noopener noreferrer"}},[s._v("MDN 文档"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/book/5be84a72f265da61684a1bae/intro",target:"_blank",rel:"noopener noreferrer"}},[s._v("《JavaScript 正则表达式迷你书》"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://easyjs.top/clean-pages.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("EasyJsBox-一些常用正则"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"http://www.gethugothemes.com/docs/regular-expressions-cheat-sheet/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Start Bootstrap - Regular Expressions Cheat Sheet"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);