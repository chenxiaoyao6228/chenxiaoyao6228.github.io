(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{599:function(a,t,s){"use strict";s.r(t);var e=s(7),i=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),s("p",[a._v("收集平时常用的 git 操作。")]),a._v(" "),s("h2",{attrs:{id:"使用alias配置别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用alias配置别名"}},[a._v("#")]),a._v(" 使用alias配置别名")]),a._v(" "),s("p",[a._v("配置git别名，其实最常用的也就前三个😂")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("alias.pm pull origin master\nalias.aa "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\nalias.cm commit -m\nalias.cb checkout -b\nalias.lo log --pretty"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("oneline\nalias.gl config --global -l\nalias.p pull\nalias.ps push\nalias.alias config --get-regexp ^alias"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(".\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("h2",{attrs:{id:"代码回滚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码回滚"}},[a._v("#")]),a._v(" 代码回滚")]),a._v(" "),s("p",[s("code",[a._v("git reset --soft HEAD~n")]),a._v(": 开发的时候改动的文件比较多，但是暂时还不构成一个完成的功能，可以使用"),s("code",[a._v("git commit -m 'stash'")]),a._v("暂存，后面再使用该命令撤销stash，恢复后的文件会保留在暂存区")]),a._v(" "),s("p",[s("code",[a._v("git reset --hard HEAD~n")]),a._v(": 与"),s("code",[a._v("--soft")]),a._v("类似，只不过reset之后记录不保留")]),a._v(" "),s("p",[s("code",[a._v("git reflog")]),a._v(": 如果不小心使用了"),s("code",[a._v("--hard")]),a._v(", 可以使用reflog命令尝试把对应的文件改动捞回来")]),a._v(" "),s("h2",{attrs:{id:"临时存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#临时存储"}},[a._v("#")]),a._v(" 临时存储")]),a._v(" "),s("p",[a._v("有时代码还没提交，但远程进行了比较大的更新，需要团队内的成员立即"),s("code",[a._v("git pull")]),a._v("更新代码库， 这时候推荐使用"),s("code",[a._v("git stash")]),a._v(", 拉取之后再进行"),s("code",[a._v("git pop")]),a._v("操作。")]),a._v(" "),s("p",[a._v("另外一种情况是: 开发某个功能的时候，想尝试一下某个新的解法，需要临时暂存修改中的某些文件， 这时候可以使用"),s("code",[a._v("git stash --staged")]),a._v(" 或者 "),s("code",[a._v("git stash --staged -m '你的提交信息'")]),a._v(".")]),a._v(" "),s("h2",{attrs:{id:"删除文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除文件"}},[a._v("#")]),a._v(" 删除文件")]),a._v(" "),s("p",[s("code",[a._v("git rm --cached xxx")]),a._v("用于将 xxx 文件/目录从 git 仓库中删除，但并不删除本地文件/目录。这经常用于 xxx 虽然被写入 .gitignore 但依然被提交了的情况。")]),a._v(" "),s("p",[a._v("与之相反，"),s("code",[a._v("git add -f xxx")]),a._v("可以在 xxx 被 ignore 的情况下强行把 xxx 加入 git 仓库。")]),a._v(" "),s("h2",{attrs:{id:"commit-整理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit-整理"}},[a._v("#")]),a._v(" commit 整理")]),a._v(" "),s("p",[s("code",[a._v("git commit . --amend")]),a._v(": 把当前代码提交到上一次提交里")]),a._v(" "),s("p",[s("code",[a._v("git rebase -i HEAD~n")]),a._v(": 对最近的 n 次 commit 进行合并、修改等操作")]),a._v(" "),s("p",[s("code",[a._v("git cherry-pick")]),a._v(": 用于筛选 commit。比如你在开发"),s("code",[a._v("feature-x")]),a._v("分支，只想保留其中的部分 commit, 就可以这样操作： 新建临时分支"),s("code",[a._v("temp")]),a._v("， 然后回到"),s("code",[a._v("feature-x")]),a._v("分支，使用"),s("code",[a._v("git reset --hard xxx")]),a._v("回滚到某个历史版本, 然后从"),s("code",[a._v("temp")]),a._v("分支中 cherry-pick 需要的 commit 记录")])])}),[],!1,null,null,null);t.default=i.exports}}]);